{
  "cause": null,
  "stackTrace": [
    {
      "methodName": "testMarshallUnMarshall",
      "fileName": "TestExceptionExtendedMarshallerTest.java",
      "lineNumber": 79,
      "className": "org.guvnor.ala.marshalling.TestExceptionExtendedMarshallerTest",
      "nativeMethod": false
    },
    {
      "methodName": "invoke0",
      "fileName": "NativeMethodAccessorImpl.java",
      "lineNumber": -2,
      "className": "sun.reflect.NativeMethodAccessorImpl",
      "nativeMethod": true
    },
    {
      "methodName": "invoke",
      "fileName": "NativeMethodAccessorImpl.java",
      "lineNumber": 62,
      "className": "sun.reflect.NativeMethodAccessorImpl",
      "nativeMethod": false
    },
    {
      "methodName": "invoke",
      "fileName": "DelegatingMethodAccessorImpl.java",
      "lineNumber": 43,
      "className": "sun.reflect.DelegatingMethodAccessorImpl",
      "nativeMethod": false
    },
    {
      "methodName": "invoke",
      "fileName": "Method.java",
      "lineNumber": 483,
      "className": "java.lang.reflect.Method",
      "nativeMethod": false
    },
    {
      "methodName": "runReflectiveCall",
      "fileName": "FrameworkMethod.java",
      "lineNumber": 50,
      "className": "org.junit.runners.model.FrameworkMethod$1",
      "nativeMethod": false
    },
    {
      "methodName": "run",
      "fileName": "ReflectiveCallable.java",
      "lineNumber": 12,
      "className": "org.junit.internal.runners.model.ReflectiveCallable",
      "nativeMethod": false
    },
    {
      "methodName": "invokeExplosively",
      "fileName": "FrameworkMethod.java",
      "lineNumber": 47,
      "className": "org.junit.runners.model.FrameworkMethod",
      "nativeMethod": false
    },
    {
      "methodName": "evaluate",
      "fileName": "InvokeMethod.java",
      "lineNumber": 17,
      "className": "org.junit.internal.runners.statements.InvokeMethod",
      "nativeMethod": false
    },
    {
      "methodName": "evaluate",
      "fileName": "RunBefores.java",
      "lineNumber": 26,
      "className": "org.junit.internal.runners.statements.RunBefores",
      "nativeMethod": false
    },
    {
      "methodName": "runLeaf",
      "fileName": "ParentRunner.java",
      "lineNumber": 325,
      "className": "org.junit.runners.ParentRunner",
      "nativeMethod": false
    },
    {
      "methodName": "runChild",
      "fileName": "BlockJUnit4ClassRunner.java",
      "lineNumber": 78,
      "className": "org.junit.runners.BlockJUnit4ClassRunner",
      "nativeMethod": false
    },
    {
      "methodName": "runChild",
      "fileName": "BlockJUnit4ClassRunner.java",
      "lineNumber": 57,
      "className": "org.junit.runners.BlockJUnit4ClassRunner",
      "nativeMethod": false
    },
    {
      "methodName": "run",
      "fileName": "ParentRunner.java",
      "lineNumber": 290,
      "className": "org.junit.runners.ParentRunner$3",
      "nativeMethod": false
    },
    {
      "methodName": "schedule",
      "fileName": "ParentRunner.java",
      "lineNumber": 71,
      "className": "org.junit.runners.ParentRunner$1",
      "nativeMethod": false
    },
    {
      "methodName": "runChildren",
      "fileName": "ParentRunner.java",
      "lineNumber": 288,
      "className": "org.junit.runners.ParentRunner",
      "nativeMethod": false
    },
    {
      "methodName": "access$000",
      "fileName": "ParentRunner.java",
      "lineNumber": 58,
      "className": "org.junit.runners.ParentRunner",
      "nativeMethod": false
    },
    {
      "methodName": "evaluate",
      "fileName": "ParentRunner.java",
      "lineNumber": 268,
      "className": "org.junit.runners.ParentRunner$2",
      "nativeMethod": false
    },
    {
      "methodName": "run",
      "fileName": "ParentRunner.java",
      "lineNumber": 363,
      "className": "org.junit.runners.ParentRunner",
      "nativeMethod": false
    },
    {
      "methodName": "run",
      "fileName": "JUnitCore.java",
      "lineNumber": 137,
      "className": "org.junit.runner.JUnitCore",
      "nativeMethod": false
    },
    {
      "methodName": "startRunnerWithArgs",
      "fileName": "JUnit4IdeaTestRunner.java",
      "lineNumber": 117,
      "className": "com.intellij.junit4.JUnit4IdeaTestRunner",
      "nativeMethod": false
    },
    {
      "methodName": "startRunnerWithArgs",
      "fileName": "JUnit4IdeaTestRunner.java",
      "lineNumber": 42,
      "className": "com.intellij.junit4.JUnit4IdeaTestRunner",
      "nativeMethod": false
    },
    {
      "methodName": "prepareStreamsAndStart",
      "fileName": "JUnitStarter.java",
      "lineNumber": 262,
      "className": "com.intellij.rt.execution.junit.JUnitStarter",
      "nativeMethod": false
    },
    {
      "methodName": "main",
      "fileName": "JUnitStarter.java",
      "lineNumber": 84,
      "className": "com.intellij.rt.execution.junit.JUnitStarter",
      "nativeMethod": false
    }
  ],
  "causeWrapper": {
    "wrappedClass": "java.lang.Exception",
    "message": "level1",
    "stackTrace": [
      {
        "methodName": "testMarshallUnMarshall",
        "fileName": "TestExceptionExtendedMarshallerTest.java",
        "lineNumber": 79,
        "className": "org.guvnor.ala.marshalling.TestExceptionExtendedMarshallerTest",
        "nativeMethod": false
      },
      {
        "methodName": "invoke0",
        "fileName": "NativeMethodAccessorImpl.java",
        "lineNumber": -2,
        "className": "sun.reflect.NativeMethodAccessorImpl",
        "nativeMethod": true
      },
      {
        "methodName": "invoke",
        "fileName": "NativeMethodAccessorImpl.java",
        "lineNumber": 62,
        "className": "sun.reflect.NativeMethodAccessorImpl",
        "nativeMethod": false
      },
      {
        "methodName": "invoke",
        "fileName": "DelegatingMethodAccessorImpl.java",
        "lineNumber": 43,
        "className": "sun.reflect.DelegatingMethodAccessorImpl",
        "nativeMethod": false
      },
      {
        "methodName": "invoke",
        "fileName": "Method.java",
        "lineNumber": 483,
        "className": "java.lang.reflect.Method",
        "nativeMethod": false
      },
      {
        "methodName": "runReflectiveCall",
        "fileName": "FrameworkMethod.java",
        "lineNumber": 50,
        "className": "org.junit.runners.model.FrameworkMethod$1",
        "nativeMethod": false
      },
      {
        "methodName": "run",
        "fileName": "ReflectiveCallable.java",
        "lineNumber": 12,
        "className": "org.junit.internal.runners.model.ReflectiveCallable",
        "nativeMethod": false
      },
      {
        "methodName": "invokeExplosively",
        "fileName": "FrameworkMethod.java",
        "lineNumber": 47,
        "className": "org.junit.runners.model.FrameworkMethod",
        "nativeMethod": false
      },
      {
        "methodName": "evaluate",
        "fileName": "InvokeMethod.java",
        "lineNumber": 17,
        "className": "org.junit.internal.runners.statements.InvokeMethod",
        "nativeMethod": false
      },
      {
        "methodName": "evaluate",
        "fileName": "RunBefores.java",
        "lineNumber": 26,
        "className": "org.junit.internal.runners.statements.RunBefores",
        "nativeMethod": false
      },
      {
        "methodName": "runLeaf",
        "fileName": "ParentRunner.java",
        "lineNumber": 325,
        "className": "org.junit.runners.ParentRunner",
        "nativeMethod": false
      },
      {
        "methodName": "runChild",
        "fileName": "BlockJUnit4ClassRunner.java",
        "lineNumber": 78,
        "className": "org.junit.runners.BlockJUnit4ClassRunner",
        "nativeMethod": false
      },
      {
        "methodName": "runChild",
        "fileName": "BlockJUnit4ClassRunner.java",
        "lineNumber": 57,
        "className": "org.junit.runners.BlockJUnit4ClassRunner",
        "nativeMethod": false
      },
      {
        "methodName": "run",
        "fileName": "ParentRunner.java",
        "lineNumber": 290,
        "className": "org.junit.runners.ParentRunner$3",
        "nativeMethod": false
      },
      {
        "methodName": "schedule",
        "fileName": "ParentRunner.java",
        "lineNumber": 71,
        "className": "org.junit.runners.ParentRunner$1",
        "nativeMethod": false
      },
      {
        "methodName": "runChildren",
        "fileName": "ParentRunner.java",
        "lineNumber": 288,
        "className": "org.junit.runners.ParentRunner",
        "nativeMethod": false
      },
      {
        "methodName": "access$000",
        "fileName": "ParentRunner.java",
        "lineNumber": 58,
        "className": "org.junit.runners.ParentRunner",
        "nativeMethod": false
      },
      {
        "methodName": "evaluate",
        "fileName": "ParentRunner.java",
        "lineNumber": 268,
        "className": "org.junit.runners.ParentRunner$2",
        "nativeMethod": false
      },
      {
        "methodName": "run",
        "fileName": "ParentRunner.java",
        "lineNumber": 363,
        "className": "org.junit.runners.ParentRunner",
        "nativeMethod": false
      },
      {
        "methodName": "run",
        "fileName": "JUnitCore.java",
        "lineNumber": 137,
        "className": "org.junit.runner.JUnitCore",
        "nativeMethod": false
      },
      {
        "methodName": "startRunnerWithArgs",
        "fileName": "JUnit4IdeaTestRunner.java",
        "lineNumber": 117,
        "className": "com.intellij.junit4.JUnit4IdeaTestRunner",
        "nativeMethod": false
      },
      {
        "methodName": "startRunnerWithArgs",
        "fileName": "JUnit4IdeaTestRunner.java",
        "lineNumber": 42,
        "className": "com.intellij.junit4.JUnit4IdeaTestRunner",
        "nativeMethod": false
      },
      {
        "methodName": "prepareStreamsAndStart",
        "fileName": "JUnitStarter.java",
        "lineNumber": 262,
        "className": "com.intellij.rt.execution.junit.JUnitStarter",
        "nativeMethod": false
      },
      {
        "methodName": "main",
        "fileName": "JUnitStarter.java",
        "lineNumber": 84,
        "className": "com.intellij.rt.execution.junit.JUnitStarter",
        "nativeMethod": false
      }
    ],
    "cause": {
      "wrappedClass": "org.guvnor.ala.pipeline.execution.PipelineExecutorException",
      "message": "level2",
      "stackTrace": [
        {
          "methodName": "testMarshallUnMarshall",
          "fileName": "TestExceptionExtendedMarshallerTest.java",
          "lineNumber": 79,
          "className": "org.guvnor.ala.marshalling.TestExceptionExtendedMarshallerTest",
          "nativeMethod": false
        },
        {
          "methodName": "invoke0",
          "fileName": "NativeMethodAccessorImpl.java",
          "lineNumber": -2,
          "className": "sun.reflect.NativeMethodAccessorImpl",
          "nativeMethod": true
        },
        {
          "methodName": "invoke",
          "fileName": "NativeMethodAccessorImpl.java",
          "lineNumber": 62,
          "className": "sun.reflect.NativeMethodAccessorImpl",
          "nativeMethod": false
        },
        {
          "methodName": "invoke",
          "fileName": "DelegatingMethodAccessorImpl.java",
          "lineNumber": 43,
          "className": "sun.reflect.DelegatingMethodAccessorImpl",
          "nativeMethod": false
        },
        {
          "methodName": "invoke",
          "fileName": "Method.java",
          "lineNumber": 483,
          "className": "java.lang.reflect.Method",
          "nativeMethod": false
        },
        {
          "methodName": "runReflectiveCall",
          "fileName": "FrameworkMethod.java",
          "lineNumber": 50,
          "className": "org.junit.runners.model.FrameworkMethod$1",
          "nativeMethod": false
        },
        {
          "methodName": "run",
          "fileName": "ReflectiveCallable.java",
          "lineNumber": 12,
          "className": "org.junit.internal.runners.model.ReflectiveCallable",
          "nativeMethod": false
        },
        {
          "methodName": "invokeExplosively",
          "fileName": "FrameworkMethod.java",
          "lineNumber": 47,
          "className": "org.junit.runners.model.FrameworkMethod",
          "nativeMethod": false
        },
        {
          "methodName": "evaluate",
          "fileName": "InvokeMethod.java",
          "lineNumber": 17,
          "className": "org.junit.internal.runners.statements.InvokeMethod",
          "nativeMethod": false
        },
        {
          "methodName": "evaluate",
          "fileName": "RunBefores.java",
          "lineNumber": 26,
          "className": "org.junit.internal.runners.statements.RunBefores",
          "nativeMethod": false
        },
        {
          "methodName": "runLeaf",
          "fileName": "ParentRunner.java",
          "lineNumber": 325,
          "className": "org.junit.runners.ParentRunner",
          "nativeMethod": false
        },
        {
          "methodName": "runChild",
          "fileName": "BlockJUnit4ClassRunner.java",
          "lineNumber": 78,
          "className": "org.junit.runners.BlockJUnit4ClassRunner",
          "nativeMethod": false
        },
        {
          "methodName": "runChild",
          "fileName": "BlockJUnit4ClassRunner.java",
          "lineNumber": 57,
          "className": "org.junit.runners.BlockJUnit4ClassRunner",
          "nativeMethod": false
        },
        {
          "methodName": "run",
          "fileName": "ParentRunner.java",
          "lineNumber": 290,
          "className": "org.junit.runners.ParentRunner$3",
          "nativeMethod": false
        },
        {
          "methodName": "schedule",
          "fileName": "ParentRunner.java",
          "lineNumber": 71,
          "className": "org.junit.runners.ParentRunner$1",
          "nativeMethod": false
        },
        {
          "methodName": "runChildren",
          "fileName": "ParentRunner.java",
          "lineNumber": 288,
          "className": "org.junit.runners.ParentRunner",
          "nativeMethod": false
        },
        {
          "methodName": "access$000",
          "fileName": "ParentRunner.java",
          "lineNumber": 58,
          "className": "org.junit.runners.ParentRunner",
          "nativeMethod": false
        },
        {
          "methodName": "evaluate",
          "fileName": "ParentRunner.java",
          "lineNumber": 268,
          "className": "org.junit.runners.ParentRunner$2",
          "nativeMethod": false
        },
        {
          "methodName": "run",
          "fileName": "ParentRunner.java",
          "lineNumber": 363,
          "className": "org.junit.runners.ParentRunner",
          "nativeMethod": false
        },
        {
          "methodName": "run",
          "fileName": "JUnitCore.java",
          "lineNumber": 137,
          "className": "org.junit.runner.JUnitCore",
          "nativeMethod": false
        },
        {
          "methodName": "startRunnerWithArgs",
          "fileName": "JUnit4IdeaTestRunner.java",
          "lineNumber": 117,
          "className": "com.intellij.junit4.JUnit4IdeaTestRunner",
          "nativeMethod": false
        },
        {
          "methodName": "startRunnerWithArgs",
          "fileName": "JUnit4IdeaTestRunner.java",
          "lineNumber": 42,
          "className": "com.intellij.junit4.JUnit4IdeaTestRunner",
          "nativeMethod": false
        },
        {
          "methodName": "prepareStreamsAndStart",
          "fileName": "JUnitStarter.java",
          "lineNumber": 262,
          "className": "com.intellij.rt.execution.junit.JUnitStarter",
          "nativeMethod": false
        },
        {
          "methodName": "main",
          "fileName": "JUnitStarter.java",
          "lineNumber": 84,
          "className": "com.intellij.rt.execution.junit.JUnitStarter",
          "nativeMethod": false
        }
      ],
      "cause": {
        "wrappedClass": "java.nio.file.FileAlreadyExistsException",
        "message": "fileValue -> otherValue: reason",
        "stackTrace": [
          {
            "methodName": "testMarshallUnMarshall",
            "fileName": "TestExceptionExtendedMarshallerTest.java",
            "lineNumber": 79,
            "className": "org.guvnor.ala.marshalling.TestExceptionExtendedMarshallerTest",
            "nativeMethod": false
          },
          {
            "methodName": "invoke0",
            "fileName": "NativeMethodAccessorImpl.java",
            "lineNumber": -2,
            "className": "sun.reflect.NativeMethodAccessorImpl",
            "nativeMethod": true
          },
          {
            "methodName": "invoke",
            "fileName": "NativeMethodAccessorImpl.java",
            "lineNumber": 62,
            "className": "sun.reflect.NativeMethodAccessorImpl",
            "nativeMethod": false
          },
          {
            "methodName": "invoke",
            "fileName": "DelegatingMethodAccessorImpl.java",
            "lineNumber": 43,
            "className": "sun.reflect.DelegatingMethodAccessorImpl",
            "nativeMethod": false
          },
          {
            "methodName": "invoke",
            "fileName": "Method.java",
            "lineNumber": 483,
            "className": "java.lang.reflect.Method",
            "nativeMethod": false
          },
          {
            "methodName": "runReflectiveCall",
            "fileName": "FrameworkMethod.java",
            "lineNumber": 50,
            "className": "org.junit.runners.model.FrameworkMethod$1",
            "nativeMethod": false
          },
          {
            "methodName": "run",
            "fileName": "ReflectiveCallable.java",
            "lineNumber": 12,
            "className": "org.junit.internal.runners.model.ReflectiveCallable",
            "nativeMethod": false
          },
          {
            "methodName": "invokeExplosively",
            "fileName": "FrameworkMethod.java",
            "lineNumber": 47,
            "className": "org.junit.runners.model.FrameworkMethod",
            "nativeMethod": false
          },
          {
            "methodName": "evaluate",
            "fileName": "InvokeMethod.java",
            "lineNumber": 17,
            "className": "org.junit.internal.runners.statements.InvokeMethod",
            "nativeMethod": false
          },
          {
            "methodName": "evaluate",
            "fileName": "RunBefores.java",
            "lineNumber": 26,
            "className": "org.junit.internal.runners.statements.RunBefores",
            "nativeMethod": false
          },
          {
            "methodName": "runLeaf",
            "fileName": "ParentRunner.java",
            "lineNumber": 325,
            "className": "org.junit.runners.ParentRunner",
            "nativeMethod": false
          },
          {
            "methodName": "runChild",
            "fileName": "BlockJUnit4ClassRunner.java",
            "lineNumber": 78,
            "className": "org.junit.runners.BlockJUnit4ClassRunner",
            "nativeMethod": false
          },
          {
            "methodName": "runChild",
            "fileName": "BlockJUnit4ClassRunner.java",
            "lineNumber": 57,
            "className": "org.junit.runners.BlockJUnit4ClassRunner",
            "nativeMethod": false
          },
          {
            "methodName": "run",
            "fileName": "ParentRunner.java",
            "lineNumber": 290,
            "className": "org.junit.runners.ParentRunner$3",
            "nativeMethod": false
          },
          {
            "methodName": "schedule",
            "fileName": "ParentRunner.java",
            "lineNumber": 71,
            "className": "org.junit.runners.ParentRunner$1",
            "nativeMethod": false
          },
          {
            "methodName": "runChildren",
            "fileName": "ParentRunner.java",
            "lineNumber": 288,
            "className": "org.junit.runners.ParentRunner",
            "nativeMethod": false
          },
          {
            "methodName": "access$000",
            "fileName": "ParentRunner.java",
            "lineNumber": 58,
            "className": "org.junit.runners.ParentRunner",
            "nativeMethod": false
          },
          {
            "methodName": "evaluate",
            "fileName": "ParentRunner.java",
            "lineNumber": 268,
            "className": "org.junit.runners.ParentRunner$2",
            "nativeMethod": false
          },
          {
            "methodName": "run",
            "fileName": "ParentRunner.java",
            "lineNumber": 363,
            "className": "org.junit.runners.ParentRunner",
            "nativeMethod": false
          },
          {
            "methodName": "run",
            "fileName": "JUnitCore.java",
            "lineNumber": 137,
            "className": "org.junit.runner.JUnitCore",
            "nativeMethod": false
          },
          {
            "methodName": "startRunnerWithArgs",
            "fileName": "JUnit4IdeaTestRunner.java",
            "lineNumber": 117,
            "className": "com.intellij.junit4.JUnit4IdeaTestRunner",
            "nativeMethod": false
          },
          {
            "methodName": "startRunnerWithArgs",
            "fileName": "JUnit4IdeaTestRunner.java",
            "lineNumber": 42,
            "className": "com.intellij.junit4.JUnit4IdeaTestRunner",
            "nativeMethod": false
          },
          {
            "methodName": "prepareStreamsAndStart",
            "fileName": "JUnitStarter.java",
            "lineNumber": 262,
            "className": "com.intellij.rt.execution.junit.JUnitStarter",
            "nativeMethod": false
          },
          {
            "methodName": "main",
            "fileName": "JUnitStarter.java",
            "lineNumber": 84,
            "className": "com.intellij.rt.execution.junit.JUnitStarter",
            "nativeMethod": false
          }
        ],
        "cause": null
      }
    }
  },
  "message": "Error5",
  "localizedMessage": "Error5",
  "suppressed": []
}


exceptions.add(new PipelineExecutorException("Error5", new Exception("level1", new PipelineExecutorException("level2", new FileAlreadyExistsException("fileValue", "otherValue", "reason")))));
